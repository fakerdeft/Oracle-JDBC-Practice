--1.계열정보를 저장할 카테고리 테이블 만들기
DROP TABLE TB_CATEGORY;
CREATE TABLE TB_CATEGORY(
    NAME VARCHAR2(10),
    USE_YN CHAR(1) DEFAULT 'Y' NOT NULL
);

--2.과목 구분을 저장할 테이블 만들기
CREATE TABLE TB_CLASSTYPE(
    NO VARCHAR2(5) PRIMARY KEY,
    NAME VARCHAR2(10)
);

--3.TB_CATEGORY테이블의 네임컬럼에 프라이머리키 생성
ALTER TABLE TB_CATEGORY
ADD CONSTRAINT CNAME_PK PRIMARY KEY (NAME);

--4.TB_CLASSTYPE테이블의 NAME 컬럼에 NULL값이 들어가지 않도록 속성 변경
ALTER TABLE TB_CLASSTYPE
MODIFY NAME NOT NULL;

--5.두 테이블에서 컬럼명이 NO인 것은 기존 타입유지+크기10으로, 컬럼명 NAME인 것은 마찬가지로 기존 타입 유지+크기20
ALTER TABLE TB_CATEGORY
MODIFY NAME VARCHAR2(20);

ALTER TABLE TB_CLASSTYPE
MODIFY NO VARCHAR(10)
MODIFY NAME VARCHAR(20);

--6.두 테이블의 NO컬럼과 NAME 컬럼의 이름을 각각 TB_를 제외한 테이블 이름이 앞에 붙은 형태로 변경
ALTER TABLE TB_CATEGORY RENAME COLUMN NAME TO CATEGORY_NAME;
ALTER TABLE TB_CATEGORY RENAME COLUMN USE_YN TO CATEGORY_USE_YN;
ALTER TABLE TB_CLASSTYPE RENAME COLUMN NAME TO CLASSTYPE_NAME;
ALTER TABLE TB_CLASSTYPE RENAME COLUMN NO TO CLASSTYPE_NO;

--7. 카테고리테이블과 클타테이블의 PK 이름을 PK_+컬럼이름 으로 지정
ALTER TABLE TB_CATEGORY RENAME CONSTRAINT CNAME_PK TO PK_CATEGORY;
ALTER TABLE TB_CLASSTYPE RENAME CONSTRAINT SYS_C007313 TO PK_CLASSTYPE;

--8. INSERT문 수행
INSERT INTO TB_CATEGORY VALUES ('공학','Y');
INSERT INTO TB_CATEGORY VALUES ('자연과학','Y');
INSERT INTO TB_CATEGORY VALUES ('의학','Y');
INSERT INTO TB_CATEGORY VALUES ('예체능','Y');
INSERT INTO TB_CATEGORY VALUES ('인문사회','Y');
COMMIT;

--9. DEPARTMENT테이블의 카테고리 컬럼이 카테고리테이블의 카테고리네임 컬럼을 부모값으로 참조하도록 FK지정
ALTER TABLE TB_DEPARTMENT 
ADD CONSTRAINT FK_DEPARTMENT_CATEGORY FOREIGN KEY (CATEGORY) REFERENCES TB_CATEGORY(CATEGORY_NAME);

--10. 학생일반정보 VIEW
GRANT CREATE VIEW TO STUDY;
CREATE OR REPLACE VIEW VW_학생일반정보
AS (SELECT STUDENT_NO 학번
          ,STUDENT_NAME 이름
          ,STUDENT_ADDRESS 주소
    FROM TB_STUDENT);

SELECT * FROM VW_학생일반정보;

--11. 지도면담 VIEW
CREATE OR REPLACE VIEW VW_지도면담
AS (SELECT STUDENT_NAME 학생이름
          ,DEPARTMENT_NAME 학과이름
          ,PROFESSOR_NAME 지도교수이름
    FROM TB_STUDENT S,TB_DEPARTMENT D, TB_PROFESSOR P
    WHERE S.DEPARTMENT_NO=D.DEPARTMENT_NO
    AND S.COACH_PROFESSOR_NO=P.PROFESSOR_NO(+));

SELECT * FROM VW_지도면담 ORDER BY 학과이름;

--12. 모든 학과의 학과별 학생 수를 확인할 수 있도록 적절한 VIEW를 작성해보자
CREATE OR REPLACE VIEW VW_학과별학생수
AS (SELECT DEPARTMENT_NAME 학과이름
          ,S.DEPARTMENT_NO 과번호
    FROM TB_STUDENT S,TB_DEPARTMENT D
    WHERE S.DEPARTMENT_NO=D.DEPARTMENT_NO
);

SELECT 학과이름
      ,COUNT(과번호) "학생 수"
FROM VW_학과별학생수 
GROUP BY 학과이름,과번호
ORDER BY 학과이름 ;

--13. A213046인 학생의 이름을 본인 이름으로 변경
UPDATE VW_학생일반정보
SET 이름='으으으'
WHERE 학번='A213046';

SELECT * FROM VW_학생일반정보;

--14. 데이터 변경될 수 있는 상황 막는 방법
CREATE OR REPLACE VIEW VW_학생일반정보
AS (SELECT STUDENT_NO 학번
          ,STUDENT_NAME 이름
          ,STUDENT_ADDRESS 주소
    FROM TB_STUDENT)
    WITH READ ONLY ;

--15. 최근 3년을 기준으로 수강인원이 가장 많았던 TOP3 과목
SELECT ROWNUM,C.*
FROM(SELECT C.CLASS_NO 과목번호
      ,C.CLASS_NAME 과목이름
      ,COUNT(G.CLASS_NO) "누적수강생수(명)"
    FROM TB_CLASS C, TB_GRADE G,TB_STUDENT S
    WHERE S.STUDENT_NO=G.STUDENT_NO
    AND G.CLASS_NO=C.CLASS_NO
    AND SUBSTR(TERM_NO,1,4) BETWEEN 2005 AND 2009
    GROUP BY C.CLASS_NO,CLASS_NAME
    ORDER BY COUNT(G.CLASS_NO) DESC) C
WHERE ROWNUM<=3;


-------------------------------------------------

--1. 데이터 입력
INSERT INTO TB_CLASSTYPE VALUES (01,'전공필수');
INSERT INTO TB_CLASSTYPE VALUES (02,'전공선택');
INSERT INTO TB_CLASSTYPE VALUES (03,'교양필수');
INSERT INTO TB_CLASSTYPE VALUES (04,'교양선택');
INSERT INTO TB_CLASSTYPE VALUES (05,'논문지도');

--2. 학생일반정보 테이블 만들기
DROP TABLE TB_학생일반정보;
CREATE TABLE TB_학생일반정보(
    학번 VARCHAR2(20),
    학생이름 VARCHAR2(20), 
    주소 VARCHAR2(200)
);

INSERT INTO TB_학생일반정보 (
    SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
    FROM TB_STUDENT
);

SELECT *
FROM TB_학생일반정보;

--3. 국어국문학과 학생들의 정보 테이블
CREATE TABLE TB_국어국문학과(
    학번 VARCHAR2(20),
    학생이름 VARCHAR2(30),
    출생년도 VARCHAR2(30),
    교수이름 VARCHAR2(30)
);

INSERT INTO TB_국어국문학과(
    SELECT STUDENT_NO,
           STUDENT_NAME,
           TO_CHAR(TO_DATE(SUBSTR(STUDENT_SSN,1,6),'RRMMDD'),'YYYY"년" MM"월" DD"일"'),
           PROFESSOR_NAME
    FROM TB_STUDENT S, TB_PROFESSOR P,TB_DEPARTMENT D
    WHERE S.DEPARTMENT_NO = D.DEPARTMENT_NO
    AND S.COACH_PROFESSOR_NO=P.PROFESSOR_NO
    AND D.DEPARTMENT_NAME='국어국문학과'
);
DELETE FROM TB_국어국문학과;
SELECT *
FROM TB_국어국문학과;

--4.학과들의 정원 10%증가
UPDATE TB_DEPARTMENT
    SET CAPACITY=ROUND(CAPACITY * 1.1) ;

SELECT * FROM TB_DEPARTMENT;

--5. A413042 주소 서울시 종로구 숭인동 181-21 로 변경
UPDATE TB_STUDENT
    SET STUDENT_ADDRESS='서울시 종로구 숭인동 181-21'
    WHERE STUDENT_NAME='박건우';
    
SELECT * FROM TB_STUDENT WHERE STUDENT_NAME='박건우';

--6.학생정보 테이블에서 뒷자리 저장 X 
UPDATE TB_STUDENT
    SET STUDENT_SSN = SUBSTR(STUDENT_SSN,1,6);

SELECT * FROM TB_STUDENT;

--7. 의학과 김명훈 2005년 1학기 피부생리학 점수 3.5로 정정
SELECT STUDENT_NAME 이름
        ,S.STUDENT_NO
        ,C.CLASS_NO
          ,DEPARTMENT_NAME 과
          ,CLASS_NAME 수업명
          ,POINT 학점
    FROM TB_STUDENT S,TB_DEPARTMENT D, TB_CLASS C,TB_GRADE G
    WHERE S.DEPARTMENT_NO=D.DEPARTMENT_NO
    AND C.CLASS_NO=G.CLASS_NO
    AND STUDENT_NAME='김명훈'
    AND DEPARTMENT_NAME='의학과'
    AND CLASS_NAME='피부생리학'
    AND SUBSTR(TERM_NO,1,6)=200501;

UPDATE TB_GRADE
SET POINT = '3.5'
WHERE STUDENT_NO IN (SELECT S.STUDENT_NO
                    FROM TB_STUDENT S,TB_DEPARTMENT D
                    WHERE S.DEPARTMENT_NO=D.DEPARTMENT_NO
                    AND STUDENT_NAME='김명훈'
                    AND DEPARTMENT_NAME='의학과'
                    AND TERM_NO = '200501');
ROLLBACK;

--8.성적 테이블에서 휴학생들의 성적 제거
DELETE FROM TB_GRADE
WHERE STUDENT_NO = ANY (SELECT STUDENT_NO
                  FROM TB_STUDENT 
                  WHERE ABSENCE_YN='Y');

SELECT * FROM TB_GRADE;







