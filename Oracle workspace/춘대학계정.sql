--1. 학과 이름과 계열 표시
SELECT DEPARTMENT_NAME 학과이름
      ,CATEGORY 계열
FROM TB_DEPARTMENT;

--2. 학과의 학과정원 출력

--3. 국어국문학과에 다니는 여학생 중 현재 휴학생인 사람은?
SELECT STUDENT_NAME 이름
FROM (SELECT *
      FROM TB_STUDENT
      WHERE DEPARTMENT_NO=1
     )  
WHERE ABSENCE_YN = 'Y';

--4. 장기연체자들을 찾으세요
SELECT STUDENT_NAME 이름
FROM TB_STUDENT
WHERE STUDENT_NO='A513079'
   OR STUDENT_NO='A513090'
   OR STUDENT_NO='A513091' 
   OR STUDENT_NO='A513110' 
   OR STUDENT_NO='A513119';

--5. 입학정원이 20명 이상 30명 이하인 학과들의 학과 이름과 계열 출력
SELECT DEPARTMENT_NAME 학과이름
      ,CATEGORY 계열
      ,CAPACITY 입학정원
FROM TB_DEPARTMENT
WHERE CAPACITY BETWEEN '20' AND '30';

--6. 총장의 이름 알아내기
SELECT PROFESSOR_NAME 이름
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;

--7. 학과가 지정되어 있지 않은 학생 찾기
SELECT STUDENT_NAME 이름
FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;

--8. 선수과목 존재하는 과목번호 조회
SELECT CLASS_NO 과목번호
FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

--9. 어떤 계열들이 있는지 조회
SELECT DISTINCT CATEGORY 계열
FROM TB_DEPARTMENT;

--10. 재학생 중 02학번 전주 거주자들 모임의 학번,이름,주민번호 조회
SELECT STUDENT_NO 학번
      ,STUDENT_NAME 이름
      ,STUDENT_SSN 주민번호
FROM TB_STUDENT
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE)= 2002
      AND ABSENCE_YN = 'N'
      AND SUBSTR(STUDENT_ADDRESS,1,2)='전주';

--11. 영어영문학과 학생들의 학번과 이름, 입학년도를 입학년도가 빠른순으로 조회
SELECT STUDENT_NO 학번
      ,STUDENT_NAME 이름
      ,ENTRANCE_DATE 입학년도
FROM TB_STUDENT
WHERE DEPARTMENT_NO = 2
ORDER BY ENTRANCE_DATE;

--12. 이름이 두 글자인 교수의 이름과 주민번호 조회
SELECT PROFESSOR_NAME 이름
      ,PROFESSOR_SSN 주민번호
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_NAME,3,1) IS NULL;

--13. 남자교수들의 이름과 나이 조회 나이는 '만'으로 계산하고 오름차순
SELECT PROFESSOR_NAME 이름
      ,(100-SUBSTR(PROFESSOR_SSN,1,2))+SUBSTR(SYSDATE,1,2)-1 "나이(만)"
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN,8,1)='1'
ORDER BY (100-SUBSTR(PROFESSOR_SSN,1,2))+SUBSTR(SYSDATE,1,2)-1;

--14. 교수들의 성을 제외한 이름만 조회
SELECT SUBSTR(PROFESSOR_NAME,2,2)이름
FROM TB_PROFESSOR;

--15. 재수생 조회
SELECT STUDENT_NO 학번
      ,STUDENT_NAME 이름
FROM TB_STUDENT
WHERE (100-SUBSTR(STUDENT_SSN,1,2))
       +SUBSTR(ENTRANCE_DATE,1,2)>19;

--16. 2020년 크리스마스는 무슨 요일인가
SELECT TO_CHAR(TO_DATE('20/12/25','YY/MM/DD'),'YYYY "년" MM"월" DD"일" (DY)') "2020년 크리스마스 요일"
FROM DUAL;

--17. TO_DATE('99/10/11','YY/MM/DD'),TO_DATE('49/10/11','YY/MM/DD') 몇 년 몇 월 몇 일?
SELECT TO_CHAR(TO_DATE('99/10/11','YY/MM/DD'),'YYYY "년" MM"월" DD"일"')
      ,TO_CHAR(TO_DATE('49/10/11','YY/MM/DD'),'YYYY "년" MM"월" DD"일"')
FROM DUAL;
--17-1. TO_DATE('99/10/11','RR/MM/DD'),TO_DATE('99/10/11','RR/MM/DD') 몇 년 몇 월 몇 일?
SELECT TO_CHAR(TO_DATE('99/10/11','RR/MM/DD'),'YYYY "년" MM"월" DD"일"')
      ,TO_CHAR(TO_DATE('49/10/11','RR/MM/DD'),'YYYY "년" MM"월" DD"일"')
FROM DUAL;

--18. 2000년도 이전 학번 학생들의 학번과 이름 조회
SELECT STUDENT_NO 학번
      ,STUDENT_NAME 이름
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_NO,1,1) != 'A';

--19. 한아름 학생의 학점 총 평점 소수점 이하 둘째자리에서 반올림
SELECT ROUND(AVG(POINT),1) 평점
FROM TB_GRADE
WHERE STUDENT_NO='A517178';

--20. 학과별 학생수를 구하여 "학과번호", "학생수(명)" 조회
SELECT DEPARTMENT_NO 학과번호
      ,COUNT(*) "학생수(명)"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

--21. 지도교수를 배정받지 못한 학생의 수 조회
SELECT COUNT(*) "학생의 수"
FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;

--22. 김고운 학생의 년도 별 평점 조회 소수점 이하 둘째자리에서 반올림
SELECT SUBSTR(TERM_NO,1,4) 년도
      ,ROUND(AVG(POINT),1) 평점
FROM TB_GRADE 
WHERE STUDENT_NO='A112113' 
GROUP BY SUBSTR(TERM_NO,1,4)
ORDER BY SUBSTR(TERM_NO,1,4);

--23. 학과 별 휴학생의 수 조회
SELECT DEPARTMENT_NO "학과번호"
      ,SUM(ABSENCE_YN) "휴학생의 수"
FROM (
    SELECT DEPARTMENT_NO
            ,DECODE(ABSENCE_YN,'Y','1','N','0') "ABSENCE_YN"
    FROM TB_STUDENT
     )
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

SELECT DEPARTMENT_NO
      ,COUNT(DECODE(ABSENCE_YN,'Y','1'))
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1;

--24. 동명이인의 수 조회
SELECT STUDENT_NAME 동일이름
      ,COUNT(*) "동명인 수"
FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(STUDENT_NAME)>1
ORDER BY STUDENT_NAME;

--25. 김고운 학생의 년도 별 학기 별 평점과 년도 별 누적 평점, 총 평점 조회 소수점 이하 둘째자리에서 반올림
SELECT *
FROM(
    SELECT SUBSTR(TERM_NO,1,4) 년도
          ,SUBSTR(TERM_NO,5,2) 학기
          ,ROUND(AVG(POINT),1) 평점
    FROM TB_GRADE
    WHERE STUDENT_NO='A112113'
    GROUP BY SUBSTR(TERM_NO,1,4),SUBSTR(TERM_NO,5,2)
    UNION 
    SELECT SUBSTR(TERM_NO,1,4) 년도
          ,TO_CHAR(' ')  학기
          ,ROUND(AVG(POINT),1) 평점
    FROM TB_GRADE 
    WHERE STUDENT_NO='A112113' 
    GROUP BY SUBSTR(TERM_NO,1,4)
    UNION 
    SELECT TO_CHAR(' ') 년도
          ,TO_CHAR(' ') 학기
          ,ROUND(AVG(POINT),1) 평점
    FROM TB_GRADE 
    WHERE STUDENT_NO='A112113' 
    )
ORDER BY 
CASE
    WHEN 년도 = ' ' THEN '1'
    ELSE '0'
END, 년도 ASC
,CASE
    WHEN 학기 = ' ' THEN '1'
    ELSE '0'
END, 학기 ASC;

SELECT NVL(SUBSTR(TERM_NO,1,4),' ') 년도
      ,NVL(SUBSTR(TERM_NO,5,2),' ') 학기
      ,ROUND(AVG(POINT),1) 평점
FROM TB_GRADE
WHERE STUDENT_NO='A112113'
GROUP BY ROLLUP(SUBSTR(TERM_NO,1,4),SUBSTR(TERM_NO,5,2))
ORDER BY SUBSTR(TERM_NO,1,4);
-------------------------------------------------------------
--1. 학생이름과 주소지를 표시하시오.
SELECT STUDENT_NAME "학생 이름"
      ,STUDENT_ADDRESS 주소지
FROM TB_STUDENT
ORDER BY 1;

--2. 휴학중인 학생들의 이름과 주민번호를 나이가 적은 순서로 출력
SELECT STUDENT_NAME,STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN='Y'
ORDER BY STUDENT_SSN DESC;

--10. 음악학과 학생들의 평점
SELECT S.STUDENT_NO "학번"
      ,S.STUDENT_NAME "학생 이름"
      ,ROUND(AVG(POINT),1) "전체 평점"
FROM TB_STUDENT S, TB_GRADE G
WHERE S.STUDENT_NO=G.STUDENT_NO
AND DEPARTMENT_NO='059'
GROUP BY S.STUDENT_NO,S.STUDENT_NAME
ORDER BY 1;

--13. 예체능 계열 과목 중 담당교수 없는 과목 출력
SELECT CLASS_NAME
      ,DEPARTMENT_NAME
FROM TB_CLASS C,TB_DEPARTMENT D
WHERE  C.CLASS_NO NOT IN (SELECT CLASS_NO
                          FROM TB_CLASS_PROFESSOR)
AND C.DEPARTMENT_NO = D.DEPARTMENT_NO
AND D.CATEGORY='예체능'
GROUP BY CLASS_NO,CLASS_NAME,D.DEPARTMENT_NAME,D.DEPARTMENT_NO
ORDER BY D.DEPARTMENT_NO;

--19. 환경조경학과가 속한 같은 계열 학과들의 학과 별 전공과목 평점을 파악. 소수점 둘째자리에서 반올림
SELECT D.DEPARTMENT_NAME "계열 학과명"
      ,ROUND(AVG(G.POINT),1) "전공 평점"
FROM TB_DEPARTMENT D,TB_GRADE G,TB_CLASS C
WHERE C.CLASS_NO=G.CLASS_NO
AND C.DEPARTMENT_NO=D.DEPARTMENT_NO
AND D.CATEGORY=(SELECT CATEGORY
    FROM TB_DEPARTMENT
    WHERE DEPARTMENT_NAME='환경조경학과')
GROUP BY D.DEPARTMENT_NAME
ORDER BY 1;



SELECT C.CLASS_NAME, D.DEPARTMENT_NAME
FROM TB_CLASS C
JOIN TB_DEPARTMENT D ON (C.DEPARTMENT_NO=D.DEPARTMENT_NO)
LEFT OUTER JOIN TB_CLASS_PROFESSOR CP ON (C.CLASS_NO=CP.CLASS_NO)
WHERE D.CATEGORY='예체능'
    AND CP.PROFESSOR_NO IS NULL;





